{"version":3,"sources":["webpack:///./node_modules/engine.io-client/lib/xmlhttprequest.js","webpack:///./node_modules/yeast/index.js","webpack:///./node_modules/engine.io-client/lib/transports/websocket.js","webpack:///./node_modules/engine.io-client/lib/transports/polling.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./node_modules/backo2/index.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/engine.io-client/lib/transport.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/node_modules/isarray/index.js","webpack:///./node_modules/socket.io-client/lib/socket.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/component-bind/index.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/parseqs/index.js","webpack:///./node_modules/parseuri/index.js","webpack:///./node_modules/socket.io-parser/index.js","webpack:///./node_modules/has-binary2/index.js","webpack:///./node_modules/engine.io-parser/lib/browser.js","webpack:///./node_modules/component-inherit/index.js","webpack:///./node_modules/engine.io-client/lib/transports/index.js","webpack:///./node_modules/socket.io-parser/binary.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/engine.io-parser/lib/keys.js","webpack:///./node_modules/socket.io-client/lib/manager.js","webpack:///./node_modules/socket.io-client/lib/index.js","webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./node_modules/to-array/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/engine.io-client/lib/index.js","webpack:///./node_modules/debug/src/debug.js","webpack:///./node_modules/engine.io-parser/lib/utf8.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/has-cors/index.js","webpack:///./node_modules/arraybuffer.slice/index.js","webpack:///./node_modules/socket.io-client/lib/url.js","webpack:///./node_modules/after/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack:///./node_modules/blob/index.js","webpack:///./node_modules/socket.io-client/lib/on.js","webpack:///./node_modules/engine.io-client/lib/socket.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/indexof/index.js","webpack:///./node_modules/socket.io-parser/is-buffer.js"],"names":["global","hasCORS","__webpack_require__","module","exports","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","e","XDomainRequest","concat","join","prev","alphabet","split","length","map","seed","i","encode","num","encoded","Math","floor","decode","str","decoded","charAt","yeast","now","Date","NodeWebSocket","Transport","parser","parseqs","inherit","debug","BrowserWebSocket","WebSocket","MozWebSocket","window","Error","code","WS","forceBase64","this","supportsBinary","perMessageDeflate","usingBrowserWebSocket","forceNode","protocols","call","prototype","name","doOpen","check","uri","agent","pfx","key","passphrase","cert","ca","ciphers","rejectUnauthorized","extraHeaders","headers","localAddress","ws","err","emit","undefined","binaryType","supports","binary","addEventListeners","self","onopen","onOpen","onclose","onClose","onmessage","ev","onData","data","onerror","onError","write","packets","writable","total","l","packet","encodePacket","options","compress","len","Buffer","byteLength","threshold","send","done","setTimeout","doClose","close","query","schema","secure","port","Number","timestampRequests","timestampParam","b64","ipv6","hostname","indexOf","path","Polling","hasXHR2","xhr","responseType","poll","pause","onPause","readyState","polling","once","doPoll","callback","index","type","onPacket","decodePayload","socket","callbackfn","encodePayload","doWrite","sid","JSONPPolling","callbacks","rNewline","rEscapedNewline","empty","___eio","push","msg","j","document","addEventListener","script","parentNode","removeChild","form","iframe","createElement","async","src","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","navigator","test","userAgent","fn","area","id","iframeId","className","style","position","top","left","target","method","setAttribute","complete","initIframe","html","action","replace","value","submit","attachEvent","onreadystatechange","onload","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","s","m","h","d","y","parse","String","match","exec","n","parseFloat","toLowerCase","fmtShort","round","fmtLong","plural","ceil","val","isNaN","long","JSON","stringify","Emitter","desc","description","open","decodePacket","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","Array","charCodeAt","getLens","validLen","placeHoldersLen","lens","_byteLength","tmp","arr","curByte","tripletToBase64","encodeChunk","uint8","start","end","output","extraBytes","parts","maxChunkLength","len2","toString","isArray","toArray","on","bind","hasBin","Socket","events","connect","connect_error","connect_timeout","connecting","disconnect","error","reconnect","reconnect_attempt","reconnect_failed","reconnect_error","reconnecting","ping","pong","io","nsp","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","autoConnect","subEvents","subs","args","arguments","unshift","apply","hasOwnProperty","BINARY_EVENT","EVENT","pop","CONNECT","reason","onpacket","sameNamespace","rootNamespaceError","ERROR","onconnect","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ack","sent","emitBuffered","destroy","process","useColors","documentElement","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","formatArgs","namespace","humanize","diff","c","color","splice","lastC","log","Function","save","namespaces","storage","removeItem","load","r","Object","VUE_APP_SOCKET","NODE_ENV","BASE_URL","DEBUG","localstorage","localStorage","chrome","local","colors","formatters","v","message","enable","slice","obj","nextTick","platform","arch","execPath","title","pid","browser","env","argv","binding","cwd","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","re","b","substring","source","host","authority","ipv6uri","isBuf","Encoder","protocol","types","Decoder","ERROR_PACKET","encodeAsString","attachments","payload","tryStringify","encodeAsBinary","writeEncoding","bloblessData","deconstruction","deconstructPacket","pack","buffers","removeBlobs","reconstructor","decodeString","p","buf","next","tryParse","substr","isPayloadValid","BinaryReconstructor","reconPack","encoding","add","base64","takeBinaryData","finishedReconstruction","binData","reconstructPacket","withNativeBlob","Blob","withNativeFile","File","hasBinary","isBuffer","ArrayBuffer","toJSON","base64encoder","keys","sliceBuffer","after","utf8","isAndroid","isPhantomJS","dontSendBlobs","upgrade","noop","packetslist","encodeBase64Object","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","buffer","encodeBlobAsArrayBuffer","fr","FileReader","result","readAsArrayBuffer","encodeBlob","blob","tryDecode","strict","ary","each","eachWithIndex","el","cb","utf8encode","b64data","readAsDataURL","fromCharCode","typed","basic","btoa","utf8decode","decodeBase64Packet","asArray","rest","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","setLengthHeader","encodeOne","doneCallback","results","decodePayloadAsBinary","chr","ret","encodedPackets","totalLength","reduce","acc","resultArray","bufferIndex","forEach","isString","ab","view","lenStr","binaryIdentifier","size","lengthAry","bufferTail","tailArray","msgLength","a","constructor","XHR","JSONP","websocket","xd","xs","jsonp","location","isSSL","forceJSONP","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","packetData","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","mixin","event","_callbacks","off","removeListener","removeAllListeners","removeEventListener","listeners","hasListeners","has","eio","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","timeout","lastPing","packetBuffer","_parser","encoder","decoder","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","skipReconnect","openSub","errorSub","cleanup","timer","clearTimeout","onping","onpong","ondata","ondecoded","onConnecting","processPacketQueue","shift","subsLength","sub","delay","onreconnect","attempt","url","cache","managers","parsed","newConnection","forceNew","multiplex","chars","arraybuffer","bytes","encoded1","encoded2","encoded3","encoded4","bufferLength","list","array","read","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","selectColor","hash","createDebug","prevTime","enabled","curr","coerce","format","formatter","logFn","init","instances","names","skips","instance","disable","stack","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","string","extra","counter","ucs2encode","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","continuationByte","decodeSymbol","byte1","byte2","byte3","byte4","version","ieee754","typedArraySupport","__proto__","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","from","TypeError","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","checked","isEncoding","actual","fromArrayLike","byteOffset","copy","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","x","pos","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","MAX_ARGUMENTS_LENGTH","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","stringtrim","trim","units","leadSurrogate","hi","lo","dst","abv","ii","parseuri","loc","href","count","err_cb","bail","proxy","requestTimeout","Request","create","unloadHandler","requests","abort","request","req","sendXhr","pollXhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","contentType","getResponseHeader","status","requestsCount","onSuccess","fromError","response","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","BlobBuilderConstructor","bb","part","BlobConstructor","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","freeGlobal","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","clone","o","priorWebsocketSuccess","createTransport","EIO","transport","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","normalizeArray","allowAboveRoot","up","last","splitPathRe","splitPath","filename","filter","f","resolvedPath","resolvedAbsolute","normalize","isAbsolute","trailingSlash","paths","relative","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","root","basename","extname","withNativeBuffer","withNativeArrayBuffer"],"mappings":"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","file":"js/sock.0434c1d5.js","sourcesContent":["// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n"],"sourceRoot":""}